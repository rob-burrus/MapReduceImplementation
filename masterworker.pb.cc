// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterworker.proto

#include "masterworker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_masterworker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShardFile_masterworker_2eproto;
namespace masterworker {
class ShardFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShardFile> _instance;
} _ShardFile_default_instance_;
class MapReduceQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapReduceQuery> _instance;
} _MapReduceQuery_default_instance_;
class MapReduceReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapReduceReply> _instance;
} _MapReduceReply_default_instance_;
}  // namespace masterworker
static void InitDefaultsShardFile_masterworker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterworker::_ShardFile_default_instance_;
    new (ptr) ::masterworker::ShardFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterworker::ShardFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShardFile_masterworker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShardFile_masterworker_2eproto}, {}};

static void InitDefaultsMapReduceQuery_masterworker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterworker::_MapReduceQuery_default_instance_;
    new (ptr) ::masterworker::MapReduceQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterworker::MapReduceQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapReduceQuery_masterworker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapReduceQuery_masterworker_2eproto}, {
      &scc_info_ShardFile_masterworker_2eproto.base,}};

static void InitDefaultsMapReduceReply_masterworker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::masterworker::_MapReduceReply_default_instance_;
    new (ptr) ::masterworker::MapReduceReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::masterworker::MapReduceReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapReduceReply_masterworker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapReduceReply_masterworker_2eproto}, {
      &scc_info_ShardFile_masterworker_2eproto.base,}};

void InitDefaults_masterworker_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShardFile_masterworker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapReduceQuery_masterworker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapReduceReply_masterworker_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_masterworker_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_masterworker_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_masterworker_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_masterworker_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterworker::ShardFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterworker::ShardFile, filename_),
  PROTOBUF_FIELD_OFFSET(::masterworker::ShardFile, offset_start_),
  PROTOBUF_FIELD_OFFSET(::masterworker::ShardFile, offset_end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, user_id_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, shard_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, n_output_files_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, output_directory_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, mapping_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceQuery, temp_file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceReply, output_files_),
  PROTOBUF_FIELD_OFFSET(::masterworker::MapReduceReply, complete_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::masterworker::ShardFile)},
  { 8, -1, sizeof(::masterworker::MapReduceQuery)},
  { 19, -1, sizeof(::masterworker::MapReduceReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterworker::_ShardFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterworker::_MapReduceQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::masterworker::_MapReduceReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_masterworker_2eproto = {
  {}, AddDescriptors_masterworker_2eproto, "masterworker.proto", schemas,
  file_default_instances, TableStruct_masterworker_2eproto::offsets,
  file_level_metadata_masterworker_2eproto, 3, file_level_enum_descriptors_masterworker_2eproto, file_level_service_descriptors_masterworker_2eproto,
};

const char descriptor_table_protodef_masterworker_2eproto[] =
  "\n\022masterworker.proto\022\014masterworker\"G\n\tSh"
  "ardFile\022\020\n\010filename\030\001 \001(\t\022\024\n\014offset_star"
  "t\030\002 \001(\005\022\022\n\noffset_end\030\003 \001(\005\"\237\001\n\016MapReduc"
  "eQuery\022\017\n\007user_id\030\001 \001(\t\022&\n\005shard\030\002 \003(\0132\027"
  ".masterworker.ShardFile\022\026\n\016n_output_file"
  "s\030\003 \001(\005\022\030\n\020output_directory\030\004 \001(\t\022\017\n\007map"
  "ping\030\005 \001(\005\022\021\n\ttemp_file\030\006 \001(\t\"Q\n\016MapRedu"
  "ceReply\022-\n\014output_files\030\001 \003(\0132\027.masterwo"
  "rker.ShardFile\022\020\n\010complete\030\002 \001(\0052`\n\017MapR"
  "educeMaster\022M\n\rMapReduceTask\022\034.masterwor"
  "ker.MapReduceQuery\032\034.masterworker.MapRed"
  "uceReply\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_masterworker_2eproto = {
  false, InitDefaults_masterworker_2eproto, 
  descriptor_table_protodef_masterworker_2eproto,
  "masterworker.proto", &assign_descriptors_table_masterworker_2eproto, 458,
};

void AddDescriptors_masterworker_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_masterworker_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_masterworker_2eproto = []() { AddDescriptors_masterworker_2eproto(); return true; }();
namespace masterworker {

// ===================================================================

void ShardFile::InitAsDefaultInstance() {
}
class ShardFile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShardFile::kFilenameFieldNumber;
const int ShardFile::kOffsetStartFieldNumber;
const int ShardFile::kOffsetEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShardFile::ShardFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterworker.ShardFile)
}
ShardFile::ShardFile(const ShardFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&offset_start_, &from.offset_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_end_) -
    reinterpret_cast<char*>(&offset_start_)) + sizeof(offset_end_));
  // @@protoc_insertion_point(copy_constructor:masterworker.ShardFile)
}

void ShardFile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ShardFile_masterworker_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_end_) -
      reinterpret_cast<char*>(&offset_start_)) + sizeof(offset_end_));
}

ShardFile::~ShardFile() {
  // @@protoc_insertion_point(destructor:masterworker.ShardFile)
  SharedDtor();
}

void ShardFile::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShardFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShardFile& ShardFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShardFile_masterworker_2eproto.base);
  return *internal_default_instance();
}


void ShardFile::Clear() {
// @@protoc_insertion_point(message_clear_start:masterworker.ShardFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_end_) -
      reinterpret_cast<char*>(&offset_start_)) + sizeof(offset_end_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShardFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShardFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("masterworker.ShardFile.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 offset_start = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_offset_start(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 offset_end = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_offset_end(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShardFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterworker.ShardFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "masterworker.ShardFile.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterworker.ShardFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterworker.ShardFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShardFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterworker.ShardFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.ShardFile.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // int32 offset_start = 2;
  if (this->offset_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset_start(), output);
  }

  // int32 offset_end = 3;
  if (this->offset_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterworker.ShardFile)
}

::google::protobuf::uint8* ShardFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterworker.ShardFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.ShardFile.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // int32 offset_start = 2;
  if (this->offset_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset_start(), target);
  }

  // int32 offset_end = 3;
  if (this->offset_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterworker.ShardFile)
  return target;
}

size_t ShardFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterworker.ShardFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // int32 offset_start = 2;
  if (this->offset_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset_start());
  }

  // int32 offset_end = 3;
  if (this->offset_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset_end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterworker.ShardFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardFile* source =
      ::google::protobuf::DynamicCastToGenerated<ShardFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterworker.ShardFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterworker.ShardFile)
    MergeFrom(*source);
  }
}

void ShardFile::MergeFrom(const ShardFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterworker.ShardFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.offset_start() != 0) {
    set_offset_start(from.offset_start());
  }
  if (from.offset_end() != 0) {
    set_offset_end(from.offset_end());
  }
}

void ShardFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterworker.ShardFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardFile::CopyFrom(const ShardFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterworker.ShardFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardFile::IsInitialized() const {
  return true;
}

void ShardFile::Swap(ShardFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShardFile::InternalSwap(ShardFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_start_, other->offset_start_);
  swap(offset_end_, other->offset_end_);
}

::google::protobuf::Metadata ShardFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterworker_2eproto);
  return ::file_level_metadata_masterworker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MapReduceQuery::InitAsDefaultInstance() {
}
class MapReduceQuery::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapReduceQuery::kUserIdFieldNumber;
const int MapReduceQuery::kShardFieldNumber;
const int MapReduceQuery::kNOutputFilesFieldNumber;
const int MapReduceQuery::kOutputDirectoryFieldNumber;
const int MapReduceQuery::kMappingFieldNumber;
const int MapReduceQuery::kTempFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapReduceQuery::MapReduceQuery()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterworker.MapReduceQuery)
}
MapReduceQuery::MapReduceQuery(const MapReduceQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      shard_(from.shard_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  output_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_directory().size() > 0) {
    output_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_directory_);
  }
  temp_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.temp_file().size() > 0) {
    temp_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temp_file_);
  }
  ::memcpy(&n_output_files_, &from.n_output_files_,
    static_cast<size_t>(reinterpret_cast<char*>(&mapping_) -
    reinterpret_cast<char*>(&n_output_files_)) + sizeof(mapping_));
  // @@protoc_insertion_point(copy_constructor:masterworker.MapReduceQuery)
}

void MapReduceQuery::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MapReduceQuery_masterworker_2eproto.base);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temp_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&n_output_files_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mapping_) -
      reinterpret_cast<char*>(&n_output_files_)) + sizeof(mapping_));
}

MapReduceQuery::~MapReduceQuery() {
  // @@protoc_insertion_point(destructor:masterworker.MapReduceQuery)
  SharedDtor();
}

void MapReduceQuery::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temp_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MapReduceQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapReduceQuery& MapReduceQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MapReduceQuery_masterworker_2eproto.base);
  return *internal_default_instance();
}


void MapReduceQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:masterworker.MapReduceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shard_.Clear();
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temp_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&n_output_files_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mapping_) -
      reinterpret_cast<char*>(&n_output_files_)) + sizeof(mapping_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapReduceQuery::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MapReduceQuery*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("masterworker.MapReduceQuery.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .masterworker.ShardFile shard = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::masterworker::ShardFile::_InternalParse;
          object = msg->add_shard();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // int32 n_output_files = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_n_output_files(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string output_directory = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("masterworker.MapReduceQuery.output_directory");
        object = msg->mutable_output_directory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 mapping = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_mapping(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string temp_file = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("masterworker.MapReduceQuery.temp_file");
        object = msg->mutable_temp_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapReduceQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterworker.MapReduceQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "masterworker.MapReduceQuery.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .masterworker.ShardFile shard = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 n_output_files = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_output_files_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_directory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_directory().data(), static_cast<int>(this->output_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "masterworker.MapReduceQuery.output_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mapping = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string temp_file = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_temp_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->temp_file().data(), static_cast<int>(this->temp_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "masterworker.MapReduceQuery.temp_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterworker.MapReduceQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterworker.MapReduceQuery)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapReduceQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterworker.MapReduceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // repeated .masterworker.ShardFile shard = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shard_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->shard(static_cast<int>(i)),
      output);
  }

  // int32 n_output_files = 3;
  if (this->n_output_files() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->n_output_files(), output);
  }

  // string output_directory = 4;
  if (this->output_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_directory().data(), static_cast<int>(this->output_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.output_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_directory(), output);
  }

  // int32 mapping = 5;
  if (this->mapping() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mapping(), output);
  }

  // string temp_file = 6;
  if (this->temp_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temp_file().data(), static_cast<int>(this->temp_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.temp_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->temp_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterworker.MapReduceQuery)
}

::google::protobuf::uint8* MapReduceQuery::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterworker.MapReduceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // repeated .masterworker.ShardFile shard = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shard_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->shard(static_cast<int>(i)), target);
  }

  // int32 n_output_files = 3;
  if (this->n_output_files() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->n_output_files(), target);
  }

  // string output_directory = 4;
  if (this->output_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_directory().data(), static_cast<int>(this->output_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.output_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_directory(), target);
  }

  // int32 mapping = 5;
  if (this->mapping() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mapping(), target);
  }

  // string temp_file = 6;
  if (this->temp_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temp_file().data(), static_cast<int>(this->temp_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "masterworker.MapReduceQuery.temp_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->temp_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterworker.MapReduceQuery)
  return target;
}

size_t MapReduceQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterworker.MapReduceQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .masterworker.ShardFile shard = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->shard_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shard(static_cast<int>(i)));
    }
  }

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string output_directory = 4;
  if (this->output_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_directory());
  }

  // string temp_file = 6;
  if (this->temp_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->temp_file());
  }

  // int32 n_output_files = 3;
  if (this->n_output_files() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n_output_files());
  }

  // int32 mapping = 5;
  if (this->mapping() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mapping());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapReduceQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterworker.MapReduceQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const MapReduceQuery* source =
      ::google::protobuf::DynamicCastToGenerated<MapReduceQuery>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterworker.MapReduceQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterworker.MapReduceQuery)
    MergeFrom(*source);
  }
}

void MapReduceQuery::MergeFrom(const MapReduceQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterworker.MapReduceQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shard_.MergeFrom(from.shard_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.output_directory().size() > 0) {

    output_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_directory_);
  }
  if (from.temp_file().size() > 0) {

    temp_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temp_file_);
  }
  if (from.n_output_files() != 0) {
    set_n_output_files(from.n_output_files());
  }
  if (from.mapping() != 0) {
    set_mapping(from.mapping());
  }
}

void MapReduceQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterworker.MapReduceQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapReduceQuery::CopyFrom(const MapReduceQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterworker.MapReduceQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapReduceQuery::IsInitialized() const {
  return true;
}

void MapReduceQuery::Swap(MapReduceQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapReduceQuery::InternalSwap(MapReduceQuery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&shard_)->InternalSwap(CastToBase(&other->shard_));
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_directory_.Swap(&other->output_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  temp_file_.Swap(&other->temp_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(n_output_files_, other->n_output_files_);
  swap(mapping_, other->mapping_);
}

::google::protobuf::Metadata MapReduceQuery::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterworker_2eproto);
  return ::file_level_metadata_masterworker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MapReduceReply::InitAsDefaultInstance() {
}
class MapReduceReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapReduceReply::kOutputFilesFieldNumber;
const int MapReduceReply::kCompleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapReduceReply::MapReduceReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:masterworker.MapReduceReply)
}
MapReduceReply::MapReduceReply(const MapReduceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      output_files_(from.output_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  complete_ = from.complete_;
  // @@protoc_insertion_point(copy_constructor:masterworker.MapReduceReply)
}

void MapReduceReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MapReduceReply_masterworker_2eproto.base);
  complete_ = 0;
}

MapReduceReply::~MapReduceReply() {
  // @@protoc_insertion_point(destructor:masterworker.MapReduceReply)
  SharedDtor();
}

void MapReduceReply::SharedDtor() {
}

void MapReduceReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapReduceReply& MapReduceReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MapReduceReply_masterworker_2eproto.base);
  return *internal_default_instance();
}


void MapReduceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:masterworker.MapReduceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_files_.Clear();
  complete_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapReduceReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MapReduceReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .masterworker.ShardFile output_files = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::masterworker::ShardFile::_InternalParse;
          object = msg->add_output_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int32 complete = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_complete(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapReduceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:masterworker.MapReduceReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .masterworker.ShardFile output_files = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 complete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:masterworker.MapReduceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:masterworker.MapReduceReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapReduceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:masterworker.MapReduceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .masterworker.ShardFile output_files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->output_files(static_cast<int>(i)),
      output);
  }

  // int32 complete = 2;
  if (this->complete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->complete(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:masterworker.MapReduceReply)
}

::google::protobuf::uint8* MapReduceReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:masterworker.MapReduceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .masterworker.ShardFile output_files = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->output_files(static_cast<int>(i)), target);
  }

  // int32 complete = 2;
  if (this->complete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->complete(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:masterworker.MapReduceReply)
  return target;
}

size_t MapReduceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:masterworker.MapReduceReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .masterworker.ShardFile output_files = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->output_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_files(static_cast<int>(i)));
    }
  }

  // int32 complete = 2;
  if (this->complete() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->complete());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapReduceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:masterworker.MapReduceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const MapReduceReply* source =
      ::google::protobuf::DynamicCastToGenerated<MapReduceReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:masterworker.MapReduceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:masterworker.MapReduceReply)
    MergeFrom(*source);
  }
}

void MapReduceReply::MergeFrom(const MapReduceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:masterworker.MapReduceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_files_.MergeFrom(from.output_files_);
  if (from.complete() != 0) {
    set_complete(from.complete());
  }
}

void MapReduceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:masterworker.MapReduceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapReduceReply::CopyFrom(const MapReduceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:masterworker.MapReduceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapReduceReply::IsInitialized() const {
  return true;
}

void MapReduceReply::Swap(MapReduceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapReduceReply::InternalSwap(MapReduceReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&output_files_)->InternalSwap(CastToBase(&other->output_files_));
  swap(complete_, other->complete_);
}

::google::protobuf::Metadata MapReduceReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_masterworker_2eproto);
  return ::file_level_metadata_masterworker_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace masterworker
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::masterworker::ShardFile* Arena::CreateMaybeMessage< ::masterworker::ShardFile >(Arena* arena) {
  return Arena::CreateInternal< ::masterworker::ShardFile >(arena);
}
template<> PROTOBUF_NOINLINE ::masterworker::MapReduceQuery* Arena::CreateMaybeMessage< ::masterworker::MapReduceQuery >(Arena* arena) {
  return Arena::CreateInternal< ::masterworker::MapReduceQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::masterworker::MapReduceReply* Arena::CreateMaybeMessage< ::masterworker::MapReduceReply >(Arena* arena) {
  return Arena::CreateInternal< ::masterworker::MapReduceReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
