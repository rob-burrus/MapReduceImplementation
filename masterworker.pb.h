// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterworker.proto

#ifndef PROTOBUF_INCLUDED_masterworker_2eproto
#define PROTOBUF_INCLUDED_masterworker_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_masterworker_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_masterworker_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_masterworker_2eproto();
namespace masterworker {
class MapReduceQuery;
class MapReduceQueryDefaultTypeInternal;
extern MapReduceQueryDefaultTypeInternal _MapReduceQuery_default_instance_;
class MapReduceReply;
class MapReduceReplyDefaultTypeInternal;
extern MapReduceReplyDefaultTypeInternal _MapReduceReply_default_instance_;
class ShardFile;
class ShardFileDefaultTypeInternal;
extern ShardFileDefaultTypeInternal _ShardFile_default_instance_;
}  // namespace masterworker
namespace google {
namespace protobuf {
template<> ::masterworker::MapReduceQuery* Arena::CreateMaybeMessage<::masterworker::MapReduceQuery>(Arena*);
template<> ::masterworker::MapReduceReply* Arena::CreateMaybeMessage<::masterworker::MapReduceReply>(Arena*);
template<> ::masterworker::ShardFile* Arena::CreateMaybeMessage<::masterworker::ShardFile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace masterworker {

// ===================================================================

class ShardFile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterworker.ShardFile) */ {
 public:
  ShardFile();
  virtual ~ShardFile();

  ShardFile(const ShardFile& from);

  inline ShardFile& operator=(const ShardFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShardFile(ShardFile&& from) noexcept
    : ShardFile() {
    *this = ::std::move(from);
  }

  inline ShardFile& operator=(ShardFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ShardFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardFile* internal_default_instance() {
    return reinterpret_cast<const ShardFile*>(
               &_ShardFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ShardFile* other);
  friend void swap(ShardFile& a, ShardFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardFile* New() const final {
    return CreateMaybeMessage<ShardFile>(nullptr);
  }

  ShardFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardFile& from);
  void MergeFrom(const ShardFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // int32 offset_start = 2;
  void clear_offset_start();
  static const int kOffsetStartFieldNumber = 2;
  ::google::protobuf::int32 offset_start() const;
  void set_offset_start(::google::protobuf::int32 value);

  // int32 offset_end = 3;
  void clear_offset_end();
  static const int kOffsetEndFieldNumber = 3;
  ::google::protobuf::int32 offset_end() const;
  void set_offset_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterworker.ShardFile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int32 offset_start_;
  ::google::protobuf::int32 offset_end_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_masterworker_2eproto;
};
// -------------------------------------------------------------------

class MapReduceQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterworker.MapReduceQuery) */ {
 public:
  MapReduceQuery();
  virtual ~MapReduceQuery();

  MapReduceQuery(const MapReduceQuery& from);

  inline MapReduceQuery& operator=(const MapReduceQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapReduceQuery(MapReduceQuery&& from) noexcept
    : MapReduceQuery() {
    *this = ::std::move(from);
  }

  inline MapReduceQuery& operator=(MapReduceQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MapReduceQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapReduceQuery* internal_default_instance() {
    return reinterpret_cast<const MapReduceQuery*>(
               &_MapReduceQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MapReduceQuery* other);
  friend void swap(MapReduceQuery& a, MapReduceQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapReduceQuery* New() const final {
    return CreateMaybeMessage<MapReduceQuery>(nullptr);
  }

  MapReduceQuery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapReduceQuery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapReduceQuery& from);
  void MergeFrom(const MapReduceQuery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapReduceQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterworker.ShardFile shard = 2;
  int shard_size() const;
  void clear_shard();
  static const int kShardFieldNumber = 2;
  ::masterworker::ShardFile* mutable_shard(int index);
  ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >*
      mutable_shard();
  const ::masterworker::ShardFile& shard(int index) const;
  ::masterworker::ShardFile* add_shard();
  const ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >&
      shard() const;

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string output_directory = 4;
  void clear_output_directory();
  static const int kOutputDirectoryFieldNumber = 4;
  const ::std::string& output_directory() const;
  void set_output_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_output_directory(::std::string&& value);
  #endif
  void set_output_directory(const char* value);
  void set_output_directory(const char* value, size_t size);
  ::std::string* mutable_output_directory();
  ::std::string* release_output_directory();
  void set_allocated_output_directory(::std::string* output_directory);

  // string temp_file = 6;
  void clear_temp_file();
  static const int kTempFileFieldNumber = 6;
  const ::std::string& temp_file() const;
  void set_temp_file(const ::std::string& value);
  #if LANG_CXX11
  void set_temp_file(::std::string&& value);
  #endif
  void set_temp_file(const char* value);
  void set_temp_file(const char* value, size_t size);
  ::std::string* mutable_temp_file();
  ::std::string* release_temp_file();
  void set_allocated_temp_file(::std::string* temp_file);

  // int32 n_output_files = 3;
  void clear_n_output_files();
  static const int kNOutputFilesFieldNumber = 3;
  ::google::protobuf::int32 n_output_files() const;
  void set_n_output_files(::google::protobuf::int32 value);

  // int32 mapping = 5;
  void clear_mapping();
  static const int kMappingFieldNumber = 5;
  ::google::protobuf::int32 mapping() const;
  void set_mapping(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterworker.MapReduceQuery)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile > shard_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr output_directory_;
  ::google::protobuf::internal::ArenaStringPtr temp_file_;
  ::google::protobuf::int32 n_output_files_;
  ::google::protobuf::int32 mapping_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_masterworker_2eproto;
};
// -------------------------------------------------------------------

class MapReduceReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterworker.MapReduceReply) */ {
 public:
  MapReduceReply();
  virtual ~MapReduceReply();

  MapReduceReply(const MapReduceReply& from);

  inline MapReduceReply& operator=(const MapReduceReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapReduceReply(MapReduceReply&& from) noexcept
    : MapReduceReply() {
    *this = ::std::move(from);
  }

  inline MapReduceReply& operator=(MapReduceReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MapReduceReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapReduceReply* internal_default_instance() {
    return reinterpret_cast<const MapReduceReply*>(
               &_MapReduceReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MapReduceReply* other);
  friend void swap(MapReduceReply& a, MapReduceReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapReduceReply* New() const final {
    return CreateMaybeMessage<MapReduceReply>(nullptr);
  }

  MapReduceReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapReduceReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapReduceReply& from);
  void MergeFrom(const MapReduceReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapReduceReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterworker.ShardFile output_files = 1;
  int output_files_size() const;
  void clear_output_files();
  static const int kOutputFilesFieldNumber = 1;
  ::masterworker::ShardFile* mutable_output_files(int index);
  ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >*
      mutable_output_files();
  const ::masterworker::ShardFile& output_files(int index) const;
  ::masterworker::ShardFile* add_output_files();
  const ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >&
      output_files() const;

  // int32 complete = 2;
  void clear_complete();
  static const int kCompleteFieldNumber = 2;
  ::google::protobuf::int32 complete() const;
  void set_complete(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterworker.MapReduceReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile > output_files_;
  ::google::protobuf::int32 complete_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_masterworker_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ShardFile

// string filename = 1;
inline void ShardFile::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShardFile::filename() const {
  // @@protoc_insertion_point(field_get:masterworker.ShardFile.filename)
  return filename_.GetNoArena();
}
inline void ShardFile::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterworker.ShardFile.filename)
}
#if LANG_CXX11
inline void ShardFile::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterworker.ShardFile.filename)
}
#endif
inline void ShardFile::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterworker.ShardFile.filename)
}
inline void ShardFile::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterworker.ShardFile.filename)
}
inline ::std::string* ShardFile::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:masterworker.ShardFile.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShardFile::release_filename() {
  // @@protoc_insertion_point(field_release:masterworker.ShardFile.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShardFile::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:masterworker.ShardFile.filename)
}

// int32 offset_start = 2;
inline void ShardFile::clear_offset_start() {
  offset_start_ = 0;
}
inline ::google::protobuf::int32 ShardFile::offset_start() const {
  // @@protoc_insertion_point(field_get:masterworker.ShardFile.offset_start)
  return offset_start_;
}
inline void ShardFile::set_offset_start(::google::protobuf::int32 value) {
  
  offset_start_ = value;
  // @@protoc_insertion_point(field_set:masterworker.ShardFile.offset_start)
}

// int32 offset_end = 3;
inline void ShardFile::clear_offset_end() {
  offset_end_ = 0;
}
inline ::google::protobuf::int32 ShardFile::offset_end() const {
  // @@protoc_insertion_point(field_get:masterworker.ShardFile.offset_end)
  return offset_end_;
}
inline void ShardFile::set_offset_end(::google::protobuf::int32 value) {
  
  offset_end_ = value;
  // @@protoc_insertion_point(field_set:masterworker.ShardFile.offset_end)
}

// -------------------------------------------------------------------

// MapReduceQuery

// string user_id = 1;
inline void MapReduceQuery::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapReduceQuery::user_id() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.user_id)
  return user_id_.GetNoArena();
}
inline void MapReduceQuery::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterworker.MapReduceQuery.user_id)
}
#if LANG_CXX11
inline void MapReduceQuery::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterworker.MapReduceQuery.user_id)
}
#endif
inline void MapReduceQuery::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterworker.MapReduceQuery.user_id)
}
inline void MapReduceQuery::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterworker.MapReduceQuery.user_id)
}
inline ::std::string* MapReduceQuery::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:masterworker.MapReduceQuery.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapReduceQuery::release_user_id() {
  // @@protoc_insertion_point(field_release:masterworker.MapReduceQuery.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapReduceQuery::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:masterworker.MapReduceQuery.user_id)
}

// repeated .masterworker.ShardFile shard = 2;
inline int MapReduceQuery::shard_size() const {
  return shard_.size();
}
inline void MapReduceQuery::clear_shard() {
  shard_.Clear();
}
inline ::masterworker::ShardFile* MapReduceQuery::mutable_shard(int index) {
  // @@protoc_insertion_point(field_mutable:masterworker.MapReduceQuery.shard)
  return shard_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >*
MapReduceQuery::mutable_shard() {
  // @@protoc_insertion_point(field_mutable_list:masterworker.MapReduceQuery.shard)
  return &shard_;
}
inline const ::masterworker::ShardFile& MapReduceQuery::shard(int index) const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.shard)
  return shard_.Get(index);
}
inline ::masterworker::ShardFile* MapReduceQuery::add_shard() {
  // @@protoc_insertion_point(field_add:masterworker.MapReduceQuery.shard)
  return shard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >&
MapReduceQuery::shard() const {
  // @@protoc_insertion_point(field_list:masterworker.MapReduceQuery.shard)
  return shard_;
}

// int32 n_output_files = 3;
inline void MapReduceQuery::clear_n_output_files() {
  n_output_files_ = 0;
}
inline ::google::protobuf::int32 MapReduceQuery::n_output_files() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.n_output_files)
  return n_output_files_;
}
inline void MapReduceQuery::set_n_output_files(::google::protobuf::int32 value) {
  
  n_output_files_ = value;
  // @@protoc_insertion_point(field_set:masterworker.MapReduceQuery.n_output_files)
}

// string output_directory = 4;
inline void MapReduceQuery::clear_output_directory() {
  output_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapReduceQuery::output_directory() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.output_directory)
  return output_directory_.GetNoArena();
}
inline void MapReduceQuery::set_output_directory(const ::std::string& value) {
  
  output_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterworker.MapReduceQuery.output_directory)
}
#if LANG_CXX11
inline void MapReduceQuery::set_output_directory(::std::string&& value) {
  
  output_directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterworker.MapReduceQuery.output_directory)
}
#endif
inline void MapReduceQuery::set_output_directory(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  output_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterworker.MapReduceQuery.output_directory)
}
inline void MapReduceQuery::set_output_directory(const char* value, size_t size) {
  
  output_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterworker.MapReduceQuery.output_directory)
}
inline ::std::string* MapReduceQuery::mutable_output_directory() {
  
  // @@protoc_insertion_point(field_mutable:masterworker.MapReduceQuery.output_directory)
  return output_directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapReduceQuery::release_output_directory() {
  // @@protoc_insertion_point(field_release:masterworker.MapReduceQuery.output_directory)
  
  return output_directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapReduceQuery::set_allocated_output_directory(::std::string* output_directory) {
  if (output_directory != nullptr) {
    
  } else {
    
  }
  output_directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_directory);
  // @@protoc_insertion_point(field_set_allocated:masterworker.MapReduceQuery.output_directory)
}

// int32 mapping = 5;
inline void MapReduceQuery::clear_mapping() {
  mapping_ = 0;
}
inline ::google::protobuf::int32 MapReduceQuery::mapping() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.mapping)
  return mapping_;
}
inline void MapReduceQuery::set_mapping(::google::protobuf::int32 value) {
  
  mapping_ = value;
  // @@protoc_insertion_point(field_set:masterworker.MapReduceQuery.mapping)
}

// string temp_file = 6;
inline void MapReduceQuery::clear_temp_file() {
  temp_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapReduceQuery::temp_file() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceQuery.temp_file)
  return temp_file_.GetNoArena();
}
inline void MapReduceQuery::set_temp_file(const ::std::string& value) {
  
  temp_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterworker.MapReduceQuery.temp_file)
}
#if LANG_CXX11
inline void MapReduceQuery::set_temp_file(::std::string&& value) {
  
  temp_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterworker.MapReduceQuery.temp_file)
}
#endif
inline void MapReduceQuery::set_temp_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  temp_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterworker.MapReduceQuery.temp_file)
}
inline void MapReduceQuery::set_temp_file(const char* value, size_t size) {
  
  temp_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterworker.MapReduceQuery.temp_file)
}
inline ::std::string* MapReduceQuery::mutable_temp_file() {
  
  // @@protoc_insertion_point(field_mutable:masterworker.MapReduceQuery.temp_file)
  return temp_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapReduceQuery::release_temp_file() {
  // @@protoc_insertion_point(field_release:masterworker.MapReduceQuery.temp_file)
  
  return temp_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapReduceQuery::set_allocated_temp_file(::std::string* temp_file) {
  if (temp_file != nullptr) {
    
  } else {
    
  }
  temp_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), temp_file);
  // @@protoc_insertion_point(field_set_allocated:masterworker.MapReduceQuery.temp_file)
}

// -------------------------------------------------------------------

// MapReduceReply

// repeated .masterworker.ShardFile output_files = 1;
inline int MapReduceReply::output_files_size() const {
  return output_files_.size();
}
inline void MapReduceReply::clear_output_files() {
  output_files_.Clear();
}
inline ::masterworker::ShardFile* MapReduceReply::mutable_output_files(int index) {
  // @@protoc_insertion_point(field_mutable:masterworker.MapReduceReply.output_files)
  return output_files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >*
MapReduceReply::mutable_output_files() {
  // @@protoc_insertion_point(field_mutable_list:masterworker.MapReduceReply.output_files)
  return &output_files_;
}
inline const ::masterworker::ShardFile& MapReduceReply::output_files(int index) const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceReply.output_files)
  return output_files_.Get(index);
}
inline ::masterworker::ShardFile* MapReduceReply::add_output_files() {
  // @@protoc_insertion_point(field_add:masterworker.MapReduceReply.output_files)
  return output_files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::masterworker::ShardFile >&
MapReduceReply::output_files() const {
  // @@protoc_insertion_point(field_list:masterworker.MapReduceReply.output_files)
  return output_files_;
}

// int32 complete = 2;
inline void MapReduceReply::clear_complete() {
  complete_ = 0;
}
inline ::google::protobuf::int32 MapReduceReply::complete() const {
  // @@protoc_insertion_point(field_get:masterworker.MapReduceReply.complete)
  return complete_;
}
inline void MapReduceReply::set_complete(::google::protobuf::int32 value) {
  
  complete_ = value;
  // @@protoc_insertion_point(field_set:masterworker.MapReduceReply.complete)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace masterworker

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_masterworker_2eproto
